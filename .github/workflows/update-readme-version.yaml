name: Auto Update README Version

on:
  push:
    tags:
      - 'release/*/v*'  # Matches tags like release/module-name/v1.0.0

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for tags
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Extract tag information
        id: tag
        run: |
          # Extract module name and version from tag
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          MODULE_NAME=$(echo $TAG_NAME | cut -d'/' -f2)
          VERSION=$(echo $TAG_NAME | cut -d'/' -f3 | sed 's/^v//')
          
          echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
      
      - name: Check if README needs updating
        id: check
        run: |
          # Use the update-version.sh script in check mode
          chmod +x ./update-version.sh
          MODULE="${{ steps.tag.outputs.MODULE_NAME }}"
          VERSION="${{ steps.tag.outputs.VERSION }}"
          
          echo "Checking if README version matches tag version..."
          if ./update-version.sh --check "$MODULE" "$VERSION"; then
            echo "README version already matches tag version"
            echo "NEEDS_UPDATE=false" >> $GITHUB_OUTPUT
          else
            echo "README version does not match tag version - update needed"
            echo "NEEDS_UPDATE=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Update README version
        if: steps.check.outputs.NEEDS_UPDATE == 'true'
        run: |
          # Set git identity for the commit
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Use update-version.sh to update the README version
          VERSION="${{ steps.tag.outputs.VERSION }}"
          MODULE="${{ steps.tag.outputs.MODULE_NAME }}"
          
          # Update the version in README.md
          chmod +x ./update-version.sh
          ./update-version.sh "$MODULE" "$VERSION"
          
          echo "Updated README version to $VERSION"
      
      - name: Create and Auto-Merge PR
        if: steps.check.outputs.NEEDS_UPDATE == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Variables for PR creation
          MODULE="${{ steps.tag.outputs.MODULE_NAME }}"
          VERSION="${{ steps.tag.outputs.VERSION }}"
          TAG="${{ steps.tag.outputs.TAG_NAME }}"
          BRANCH="automated-readme-update-$MODULE-$VERSION"
          PR_TITLE="chore: update $MODULE version to $VERSION"
          
          # Create a branch for the PR
          git checkout -b "$BRANCH"
          
          # Commit the changes
          git add "$MODULE/README.md"
          git commit -m "$PR_TITLE" --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          
          # Push the branch
          git push origin "$BRANCH"
          
          # Create PR using GitHub CLI
          PR_URL=$(gh pr create \
            --title "$PR_TITLE" \
            --body "This PR automatically updates the README version to match the newly created tag.
            
            Tag: $TAG
            Module: $MODULE
            Version: $VERSION
            
            This PR will be automatically approved and merged." \
            --base main \
            --head "$BRANCH")
          
          echo "Created PR: $PR_URL"
          
          # Extract PR number from URL
          PR_NUMBER=$(echo "$PR_URL" | grep -o '[0-9]*$')
          
          # Request review from cdr-bot
          gh pr review "$PR_NUMBER" --request --reviewer "cdr-bot"
          
          # Enable auto-merge
          gh pr merge "$PR_NUMBER" --auto --squash
          
          echo "PR has been created, requested cdr-bot review, and set to auto-merge"