name: Auto Update README Version

on:
  push:
    tags:
      - 'release/*/v*'  # Matches tags like release/module-name/v1.0.0

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for tags
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Extract tag information
        id: tag
        run: |
          # Extract module name and version from tag
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          MODULE_NAME=$(echo $TAG_NAME | cut -d'/' -f2)
          VERSION=$(echo $TAG_NAME | cut -d'/' -f3 | sed 's/^v//')
          
          echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
      
      - name: Check if README needs updating
        id: check
        run: |
          # Use the update-version.sh script in check mode
          chmod +x ./update-version.sh
          MODULE="${{ steps.tag.outputs.MODULE_NAME }}"
          VERSION="${{ steps.tag.outputs.VERSION }}"
          
          echo "Checking if README version matches tag version..."
          if ./update-version.sh --check "$MODULE" --version="$VERSION"; then
            echo "README version already matches tag version"
            echo "NEEDS_UPDATE=false" >> $GITHUB_OUTPUT
          else
            echo "README version does not match tag version - update needed"
            echo "NEEDS_UPDATE=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Update README version
        if: steps.check.outputs.NEEDS_UPDATE == 'true'
        run: |
          # Use the existing script to update the README version
          # We're forcing an exact version (from the tag) instead of bumping
          
          # Set git identity for the commit
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Use update-version.sh to update the README with the exact version from the tag
          # This script is specifically designed for this purpose
          VERSION="${{ steps.tag.outputs.VERSION }}"
          MODULE="${{ steps.tag.outputs.MODULE_NAME }}"
          
          # Update the version in README.md
          chmod +x ./update-version.sh
          ./update-version.sh "$MODULE" --version="$VERSION"
          
          echo "Updated README version to $VERSION"
      
      - name: Create Pull Request
        if: steps.check.outputs.NEEDS_UPDATE == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update ${{ steps.tag.outputs.MODULE_NAME }} version to ${{ steps.tag.outputs.VERSION }}"
          branch: automated-readme-update-${{ steps.tag.outputs.MODULE_NAME }}-${{ steps.tag.outputs.VERSION }}
          base: main
          title: "chore: update ${{ steps.tag.outputs.MODULE_NAME }} version to ${{ steps.tag.outputs.VERSION }}"
          body: |
            This PR automatically updates the README version to match the newly created tag.
            
            Tag: ${{ steps.tag.outputs.TAG_NAME }}
            Module: ${{ steps.tag.outputs.MODULE_NAME }}
            Version: ${{ steps.tag.outputs.VERSION }}
            
            This PR has been automatically approved and enabled for auto-merge.
          delete-branch: true
      
      - name: Auto-approve PR
        if: steps.create-pr.outputs.pull-request-number
        uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          
      - name: Enable auto-merge
        if: steps.create-pr.outputs.pull-request-number
        run: |
          # Enable auto-merge using GitHub CLI
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}