name: Auto Update README Version

on:
  push:
    tags:
      - "release/*/v*" # Matches tags like release/module-name/v1.0.0

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Extract tag information
        id: tag
        run: |
          # Parse the tag name (e.g., "release/code-server/v1.2.3")
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          # Extract module name (the middle part)
          MODULE_NAME=$(echo $TAG_NAME | cut -d'/' -f2)
          # Extract version (the last part, without the 'v' prefix)
          VERSION=$(echo $TAG_NAME | cut -d'/' -f3 | sed 's/^v//')

          # Make these values available to other steps
          echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Check if README version needs updating
        id: check
        env:
          MODULE_NAME: ${{steps.tag.outputs.MODULE_NAME}}
          VERSION: ${{steps.tag.outputs.VERSION}}
        run: |
          if ./update_version.sh --check $MODULE_NAME $VERSION
            echo "NEEDS_UPDATE=false" >> $GITHUB_OUTPUT
            echo "README version already matches tag version - no update needed"
          else
            echo "NEEDS_UPDATE=true" >> $GITHUB_OUTPUT
            echo "README version doesn't match tag version - update needed"
          fi

      # Update README with new version
      - name: Update README version
        if: steps.check.outputs.NEEDS_UPDATE == 'true'
        env:
          MODULE_NAME: ${{steps.tag.outputs.MODULE_NAME}}
          VERSION: ${{steps.tag.outputs.VERSION}}
        run: |
          # Set git identity for commits
          git config user.name "cdrci"
          git config user.email "78873720+cdrci@users.noreply.github.com"

          # Update the README with the new version
          ./update_version.sh $MODULE_NAME $VERSION
          echo "Updated README version of $MODULE_NAME to $VERSION"

      - name: Create PR for version update
        if: steps.check.outputs.NEEDS_UPDATE == 'true' && github.repository_owner == 'coder'
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODULE_NAME: ${{steps.tag.outputs.MODULE_NAME}}
          VERSION: ${{steps.tag.outputs.VERSION}}
          TAG: ${{steps.tag.outputs.TAG}}
        run: |
          BRANCH="auto-update-$MODULE_NAME-$VERSION"
          PR_TITLE="chore($MODULE_NAME): update version to $VERSION"
          git checkout -b "$BRANCH"
          git add "$MODULE_NAME/README.md"
          git commit -m "$PR_TITLE"
          git push origin "$BRANCH"

          PR_URL=$(gh pr create \
            --title "$PR_TITLE" \
            --body "Updates module version to match the latest tag $TAG" \
            --base main \
            --head "$BRANCH")

          gh pr merge "$PR_URL" --auto --squash
          echo "Enabled auto-merge for $PR_URL"

          # TODO: Add Autoapprove PR
